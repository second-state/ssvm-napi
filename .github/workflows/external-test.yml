name: External Test

on:
  push:
    branches:
    - '**/test**'
    tags:
    - '[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
    - master


jobs:
  test_wasm_learning:
    runs-on: ubuntu-latest
    container:
      image: wasmedge/wasmedge:ubuntu2004_x86_64
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
        include:
        - node-version: '14.x'
          ssvm-options: '--enable-aot'

    steps:
    # MAGIC: Checkout wasm-learning at $GITHUB_WORKSPACE so that node
    #        module search will find 'ssvm' from inside the testdirs.
    - name: Checkout wasm-learning
      uses: actions/checkout@v2
      with:
        repository: second-state/wasm-learning

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Checkout wasmedge-core
      uses: actions/checkout@v2
      with:
        path: wasmedge-core

    - name: Set Rust to required version
      uses: actions-rs/toolchain@v1
      with:
        toolchain: 1.50.0
        override: true

    - name: Install dependencies
      run: |
        npm install --unsafe-perm -g rustwasmc

    - name: Build and install wasmedge-core
      uses: './wasmedge-core/.github/actions/build-from-source'
      with:
        path: './wasmedge-core'

    - name: Test functions ${{ matrix.ssvm-options }}
      run: |
        rustwasmc build ${{ matrix.ssvm-options }}
        sed -i "s/require('ssvm')/require('wasmedge-core')/" pkg/*.js
        node node/app.js
        rustwasmc clean
      working-directory: nodejs/functions

    - name: Test JSON IO ${{ matrix.ssvm-options }}
      run: |
        rustwasmc build ${{ matrix.ssvm-options }}
        sed -i "s/require('ssvm')/require('wasmedge-core')/" pkg/*.js
        node node/app.js
        rustwasmc clean
      working-directory: nodejs/json_io

    - name: Test WASI ${{ matrix.ssvm-options }}
      run: |
        rustwasmc build ${{ matrix.ssvm-options }}
        sed -i "s/require('ssvm')/require('wasmedge-core')/" pkg/*.js
        node node/app.js
        rustwasmc clean
      working-directory: nodejs/wasi

    - name: Test KMeans ${{ matrix.ssvm-options }}
      if: ${{ contains(matrix.ssvm-options, 'aot') }}
      run: |
        rustwasmc build ${{ matrix.ssvm-options }}
        sed -i "s/require('ssvm')/require('wasmedge-core')/" pkg/*.js
        cd node
        node app.js
        cd -
        rustwasmc clean
      working-directory: nodejs/kmeans
